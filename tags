!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CommunityDetector	girvan_newman_communities/detect.py	/^class CommunityDetector(object):$/;"	c
__init__	girvan_newman_communities/detect.py	/^    def __init__(self, adj_dict):$/;"	m	class:CommunityDetector
_patent_subset	data/__init__.py	/^_patent_subset = '\/'.join([_this_dir, 'adj.p'])$/;"	v
_this_dir	data/__init__.py	/^_this_dir = os.path.dirname(os.path.realpath(__file__))$/;"	v
author	setup.py	/^      author='Alex Ledger',$/;"	v
author_email	setup.py	/^      author_email='a.led1027@gmail.com',$/;"	v
delta_modularity	girvan_newman_communities/detect.py	/^    def delta_modularity(self, node_i, community):$/;"	m	class:CommunityDetector
description	setup.py	/^      description='An implementation of the girvan-newman algorithm for detecting communities in graphs',$/;"	v
edge_deg	tests.py	/^    def edge_deg(node_idx):$/;"	f	function:get_B
get_B	tests.py	/^def get_B(A):$/;"	f
get_adjacency_matrix	girvan_newman_communities/detect.py	/^    def get_adjacency_matrix(self, nodes, directed=False):$/;"	m	class:CommunityDetector
get_patent_adj	data/__init__.py	/^def get_patent_adj():$/;"	f
get_test_adj_dict	tests.py	/^def get_test_adj_dict(which_dict):$/;"	f
get_test_initial_S	tests.py	/^def get_test_initial_S(which_set, num_nodes):$/;"	f
install_requires	setup.py	/^      install_requires=['networkx', 'numpy']$/;"	v
k	girvan_newman_communities/detect.py	/^        def k(node_idx):$/;"	f	function:CommunityDetector.delta_modularity
license	setup.py	/^      license='MIT',$/;"	v
modularity	tests.py	/^def modularity(A, S):$/;"	f
num_stubs	girvan_newman_communities/detect.py	/^    def num_stubs(self):$/;"	m	class:CommunityDetector
packages	setup.py	/^      packages=['girvan_newman_communities'],$/;"	v
phase1	girvan_newman_communities/detect.py	/^    def phase1(self):$/;"	m	class:CommunityDetector
phase2	girvan_newman_communities/detect.py	/^    def phase2(self):$/;"	m	class:CommunityDetector
run	girvan_newman_communities/detect.py	/^    def run(self, node_names=True, verbose=False):$/;"	m	class:CommunityDetector
url	setup.py	/^      url='http:\/\/github.com\/aled1027\/girvan_newman_communities',$/;"	v
version	setup.py	/^      version='0.1',$/;"	v
zip_safe	setup.py	/^      zip_safe=False)$/;"	v
